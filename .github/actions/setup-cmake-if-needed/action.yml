---
name: Setup CMake (if needed)
description: Conditionally ensure CMake >= min_version; installs pinned version via pip (cmake Python package) if too old/missing.
inputs:
  min_version:
    description: Minimum acceptable CMake version (major.minor.patch)
    required: false
    default: "3.20.0"
  cmake_version:
    description: Version spec for Python cmake package
    required: false
    default: "3.29.*"
  python_bin:
    description: Python executable to use for pip install (from setup-python-if-needed output)
    required: false
    default: "python"
outputs:
  cmake_version:
    description: Final CMake version after this action completes
    value: ${{ steps.final.outputs.cmake_version }}
  did_install:
    description: Whether installation occurred (true/false)
    value: ${{ steps.check.outputs.needs_cmake }}
runs:
  using: "composite"
  steps:
    - name: Check CMake version
      id: check
      shell: bash
      run: |
        set -euo pipefail
        need=true
        if command -v cmake >/dev/null 2>&1; then
          verline="$(cmake --version | head -n1)"
          MA="$(echo "$verline" | sed -E 's/.* ([0-9]+)\.([0-9]+)\.([0-9]+).*/\1/')"
          MI="$(echo "$verline" | sed -E 's/.* ([0-9]+)\.([0-9]+)\.([0-9]+).*/\2/')"
          PA="$(echo "$verline" | sed -E 's/.* ([0-9]+)\.([0-9]+)\.([0-9]+).*/\3/')"
          req="${{ inputs.min_version }}"
          rMA="${req%%.*}"
          rest="${req#*.}"
          rMI="${rest%%.*}"
          rPA="${rest#*.}"
          if [ "$MA" -gt "$rMA" ] || { [ "$MA" -eq "$rMA" ] && [ "$MI" -gt "$rMI" ]; } || { [ "$MA" -eq "$rMA" ] && [ "$MI" -eq "$rMI" ] && [ "$PA" -ge "$rPA" ]; }; then
            need=false
          fi
        fi
        echo "needs_cmake=$need" >> "$GITHUB_OUTPUT"

    - name: Install CMake via pip (only if needed)
      if: steps.check.outputs.needs_cmake == 'true'
      shell: bash
      env:
        PYBIN: ${{ inputs.python_bin }}
        CMAKE_PIP_VERSION: ${{ inputs.cmake_version }}
      run: |
        set -euo pipefail
        "$PYBIN" -m pip install --upgrade "cmake==${CMAKE_PIP_VERSION}"
        CM_BIN_DIR="$("$PYBIN" -c 'import cmake; import os; print(cmake.CMAKE_BIN_DIR)')"
        echo "Adding CMake bin dir to PATH: $CM_BIN_DIR"
        echo "$CM_BIN_DIR" >> "$GITHUB_PATH"

    - name: Finalize / report CMake version
      id: final
      shell: bash
      run: |
        set -euo pipefail
        cmake --version
        cv="$(cmake --version | head -n1 | awk '{print $3}')"
        echo "cmake_version=$cv" >> "$GITHUB_OUTPUT"
